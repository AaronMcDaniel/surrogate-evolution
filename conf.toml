# Configuration file for the NAS

[pipeline]
# initial population size
initial_population_size = 100
# population size
population_size = 50
# unsustainable population size
unsustainable_population_size = 500
# number of parents to be selected to mate
num_parents = 20
# types of crossovers and their probabilities
crossovers = {one_point = 0.5, one_point_leaf_biased = 0.3}
# types of mutations and their probabilities
mutations = {node_replacement = 0.1}
# whether to use surrogate
surrogate_enabled = false
# GA objectives to optimize for and their weights (matter only relative to each other)
objectives = {val_epoch_loss = -1, ciou_loss = -1, average_precision = 1}
# strategy for down selecting individuals trusted by the surrogate
selection_method_trusted = "NSGA2" # Need to define all enums
# strategy for down selecting individuals untrusted by the surrogate
selection_method_untrusted = "Random" # Need to define all enums
# strategy for selecting parents to mate for overpopulating
selection_method_parents = "NSGA2" # Need to define all enums
# strategy for selecting elite individuals
selection_method_elite_pool = "SPEA2" # Need to define all enums
# max size of elite pool
max_elite_pool = 100
# source of genomes to train the surrogate with each generation 
train_pool_source = "All" 
# source of genomes used to calculate the trust value of the surrogate(s)
trust_pool_source = "ElitePopMix"
# criteria to select best epoch
best_epoch_criteria = ["average_precision", "max"]

[model]
# number of epochs to train individuals for
train_epochs = 5
# batch size
batch_size = 2
# number of batches in one epoch
batches_per_epoch = 10
# number of target classes in AOT
num_classes = 7
# iou threshold for determining detection
iou_thresh = -0.8
# confidence threshold for filtering predictions
conf_thresh = 0.0
# priority type of iou calculation
iou_type = "ciou"
# number of components weighted together to make the loss for the individual
num_loss_components = 7
# seed for loading train data
train_seed = 0
# seed for loading val data
val_seed = 0

[codec]
# method of encoding NN as a genome
genome_encoding_strat = "Tree" # Need to define 
# method of encoding NN for the surrogate
surrogate_encoding_strat = "Graph2Vec"

[surrogate]
# surrogate models to be used
models = ["MLP", "GRBT", "XGB", "Transformer"]
# method of calculating the trust of a surrogate
trust_calc_strategy = "SPEA2"
# ratio of population to check intersection on
trust_calc_ratio = 0.3
